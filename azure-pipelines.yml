# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger: none

jobs:
  - job: Aarch64_Manylinux2014Build
    pool:
      vmImage: 'ubuntu-18.04'
    strategy:
      matrix:
        Py36 Arm64:
          python.version: 'cp36-cp36m'
          manylinux: 'manylinux_aarch64'
        Py37 Arm64:
          python.version: 'cp37-cp37m'
          manylinux: 'manylinux_aarch64'
        Py38 Arm64:
          python.version: 'cp38-cp38'
          manylinux: 'manylinux_aarch64'
        Py39 Arm64:
          python.version: 'cp39-cp39'
          manylinux: 'manylinux_aarch64'
    steps:
    - script: docker run --rm --privileged hypriot/qemu-register
      displayName: 'Registering qemu'
    - script: |
        set -xeo pipefail
        docker run -v $(pwd):"${DOCKER_ROOT_DIRECTORY}":rw,z \
                   -e HOST_USER_ID \
                    "quay.io/pypa/manylinux2014_aarch64:latest" \
                    bash -c "cd $DOCKER_ROOT_DIRECTORY;
                    "${PYBIN}/pip" install --upgrade pip && \
                    "${PYBIN}/pip" install setuptools wheel pytest-azurepipelines twine numpy && \
                    "${PYBIN}/pip" wheel . -w wheelhouse/ && \
                    auditwheel repair "$whl" --plat manylinux2014_aarch64 -w wheelhouse-manylinux"
      displayName: 'Running AArch64 build'
      env:
        DOCKER_ROOT_DIRECTORY: "/home/source_root"
        HOST_USER_ID: $(id -u)
        PYTHON: "python$(python.version)"
        PYBIN: /opt/python/$(python.version)/bin
